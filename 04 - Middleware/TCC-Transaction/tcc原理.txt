http://www.iocoder.cn/TCC-Transaction/tcc-core/?juejin&2018-02-05

TCC事务
为了解决在事务运行过程中大颗粒度资源锁定的问题，业界提出一种新的事务模型，它是基于业务层面的事务定义。锁粒度完全由业务自己控制。
它本质是一种补偿的思路。它把事务运行过程分成 Try、Confirm / Cancel 两个阶段。
在每个阶段的逻辑由业务代码控制。这样就事务的锁粒度可以完全自由控制。业务可以在牺牲隔离性的情况下，获取更高的性能。

Try 阶段
	Try ：尝试执行业务
		  完成所有业务检查( 一致性 )
		  预留必须业务资源( 准隔离性 )
Confirm / Cancel 阶段：
	Confirm ：确认执行业务
		真正执行业务
		不做任务业务检查
		Confirm 操作满足幂等性
	Cancel ：取消执行业务
		释放 Try 阶段预留的业务资源
		Cancel 操作满足幂等性
	Confirm 与 Cancel 互斥
	
与 2PC协议 比较：

	位于业务服务层而非自愿层
	没有单独的准备( Prepare )阶段，Try 操作兼备自愿操作与准备能力
	Try 操作可以灵活选择业务资源的锁定粒度
	较高开发成本