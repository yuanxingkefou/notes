
这个问题的答案就比较多了，各人的心得都是不一样的。主要考察在工作实践中的总结和思考能力。最好面试者能在总结的通用答案之后加上实际项目中的使用例子。

　　⭐️  innodb_buffer_pool_size 此参数的作用是缓冲数据和索引，对性能可以产生线性的提高，最大可设置为内存大小的百分之七八十的样子

　　⭐️  打开慢查询日志，增加参数：log-queries-not-using-indexes，方便把系统中没有走索引的sql语句全抓出来优化

　　⭐️  通过explain做查询分析，看看有没有用索引，访问的行数rows

　　⭐️  关闭skip_name_resolve，减少逆向DNS解析的消耗

　　另外还有一些实际写代码过程中深入骨髓的，比如数据动静分离提高query_cache的命中率啦，减少字段冗余，减少查询次数啦，复杂查询分解啦，分页优化啦啥的。

　　很多人说面试题和实际开发联系不大，觉得没啥用。其实很多活培训两个月都是能干的。人和人之间的差距确实没有明显到你能干我不能干的程度。但是之前做过一个项目，我和别人一起干，干完之后我要修改很多其他人的各种慢查询问题啦，性能问题啦之类。我看了他们写的sql，我发现这些sql我会理所当然不那么用的。因为我在人人的时候就很注意这些方面，我认为是理所当然的，知道这样影响性能。

　　还有就是面试评价好的人实际写代码的时候确实出的问题要少，因为他们考虑更全面。很多人不是有意要出bug的，但是确实是不知道啊，不知道要考虑情况A，情况B，不知道JVM底层的实现，所以有可能会产生的意想不到的结果。出了问题了也不知道往哪个方向去想。