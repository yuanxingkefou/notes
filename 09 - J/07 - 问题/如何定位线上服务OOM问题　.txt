
Java服务OOM，比较常见的原因是

有可能是内存分配确实过小，而正常业务使用了大量内存

	比如jmap -heap命令可以查看新生代老年代的堆内存大小及使用情况，看看是否内存本身分配过小。

某一个对象被频繁申请，却没有释放，内存不断泄漏，导致内存耗尽

	比如jmap -histo:live 对象显示存活对象的信息，并按照所占内存大小的排序。因为包含了实例数、所占内存大小、类名，所以很直观。

某一个资源被频繁申请，系统资源耗尽，例如：不断创建线程，不断发起网络连接　　
	
	可以用pstree、netstat查看进程创建线程数，网络连接数，如果资源耗尽，也会出现OOM。也可以查看/proc/${PID}/fd  和/proc/${PID}/task，查看句柄详情和线程数。